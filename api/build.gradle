plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.3'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.hidetake.swagger.generator' version '2.19.2'
}

group = 'com.rozz.api-specification'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

repositories {
	mavenCentral()
}

dependencies {
	
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

  swaggerCodegen 'org.openapitools:openapi-generator-cli:3.3.4'     // or OpenAPI Generator

}

// swaggerSources {
//   def typeMappings = 'URI=URI'
//   def importMappings = 'URI=java.net.URI'
//   eStore {
//     def apiYaml = "${rootDir}/src/main/resources/api/openapi.yaml"
//     def configJson = "${rootDir}/src/main/resources/api/config.json"
//     inputFile = file(apiYaml)
//     def ignoreFile = file("${rootDir}/src/main/resources/api/.openapi-generator-ignore")
//     code {
//       language = 'spring'
//       configFile = file(configJson)
//       rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings',
// 										typeMappings, '--import-mappings', importMappings] as List<String>
//       components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
//     //   dependsOn validation // Should be uncommented once plugin starts supporting OA 3 validation
//     }
//   }
// }

swaggerSources {
  eStore {
    def apiYaml = "${rootDir}/src/main/resources/api/openapi.yaml"
    inputFile = file(apiYaml)
    code {
      language = 'spring'
      components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
    }
  }
}

tasks.named('test') {
	useJUnitPlatform()
}
